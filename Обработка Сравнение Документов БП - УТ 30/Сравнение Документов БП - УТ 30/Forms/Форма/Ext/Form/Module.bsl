&НаКлиенте
Перем СообщениеПодключения;

&НаКлиенте
Процедура ЗакрытьОкноСлужебныеСообщения() 
	ОкноСлСообщ = Новый COMОбъект("Wscript.shell"); 
	ОкноСлСообщ.SendKeys("^+{z}"); 
	ОкноСлСообщ.SendKeys("^+{я}"); 
КонецПроцедуры

&НаКлиенте
Процедура ПутьКДаннымНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыборФайлаДляВыгрузкиИЗагрузки(Элемент);
	ДанныеВыбора = Объект.ПутьКДанным;
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаДляВыгрузкиИЗагрузки(Элемент) Экспорт
	
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбора.Заголовок                   = "Выберете каталог БД";
	ДиалогВыбора.ПредварительныйПросмотр     = Ложь;
	ДиалогВыбора.ИндексФильтра               = 0;
	ДиалогВыбора.ПроверятьСуществованиеФайла = Ложь;
	
	Если ДиалогВыбора.Выбрать() Тогда
		Объект.ПутьКДанным = ДиалогВыбора.Каталог;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерверныйВариантПриИзменении(Элемент)
	Элементы.ИмяСервераИнформационнойБазыДляПодключения.Видимость = Объект.СерверныйВариант;
	Элементы.ИмяИнформационнойБазыНаСервереДляПодключения.Видимость = Объект.СерверныйВариант;
	Элементы.ПутьКДанным.Видимость = НЕ Объект.СерверныйВариант;
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("РезультатВыбораПериода",ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода",,,,,,ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура РезультатВыбораПериода(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		Период.ДатаНачала = Результат.НачалоПериода;	
		Период.ДатаОкончания  = Результат.КонецПериода;	
	КонецЕсли;	
КонецПроцедуры	

//<%%%> --- Виктор vik070777@yandex.ru 17.05.2022 13:43:12 
&НаСервере
Процедура ВыплнитьОчисткуДанных()
	ТабличныйДокумент.Очистить();
	ТаблицаДокументов.Очистить();	
КонецПроцедуры
 //<%%%> --- Виктор 17.05.2022 13:43:12 END

&НаКлиенте
Процедура Команда2(Команда)
	Если НЕ ОтчетОРозничныхПродажах И НЕ РеализацияТоваровУслуг И НЕ ПоступлениеТоваровУслуг И НЕ ВозвратТоваровОтПокупателя Тогда
		ПоказатьПредупреждение(,"Внимание! Выберите виды документов по которым будет проведена сверка!");
		Возврат;
	КонецЕсли;
	ВыплнитьОчисткуДанных();	
	ПередЗакрытиемНаСервере(); //Сохранение настроек обработки
	ПараметрыПоиска = Новый Структура("ДатаНач,ДатаКон,НаименованиеДокБП,НаименованиеДокУТ,ПоАртикулу,ПоКоду,ИсключитьКонтрагентов",
				Период.ДатаНачала,Период.ДатаОкончания,"","",?(ПоискПО=0,Истина,Ложь),?(ПоискПО=1,Истина,Ложь),?(НеКонтрагенты.Количество() > 0, Истина, Ложь));
				
				
	ТекстОшибки = "";	
	РезультатВыполнения = ВыполнитьПоискДанныхИЗаполнениеМакета(ПараметрыПоиска);
	Если РезультатВыполнения.Выполнено  Тогда
		ВыполнитьЗаполениеТаблицаДокументов(РезультатВыполнения);
	Иначе
		ПоказатьПредупреждение(,РезультатВыполнения.ТекстОшибки);
 	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗаполениеТаблицаДокументов(РезультатВыполнения) Экспорт
	Попытка
		СамаТаблица = ПолучитьИзВременногоХранилища(РезультатВыполнения.АдресТаблицыДокументов);
		
		ТаблицаДокументов.Загрузить(СамаТаблица);
	Исключение
	КонецПопытки;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(РезультатВыполнения.ТабличныйДокумент);
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьПоискДанныхИЗаполнениеМакета(ПараметрыПоиска)
	НастройкиОбработки = ПолучитьПараметрыОбработки();
	РезультатВыполнения = РеквизитФормыВЗначение("Объект").ВыполнитьПоискДанныхИЗаполнениеМакета(ПараметрыПоиска, НастройкиОбработки);
	Возврат РезультатВыполнения;
КонецФункции

&НаКлиенте
Функция ЕстьКоличествоСумма(МассивСтрок) Экспорт
	
	Есть = Истина;
	Количество1 = Неопределено;
	Количество2 = Неопределено;
	Сумма1 = Неопределено;
	Сумма2 = Неопределено;
	Для каждого Строка из МассивСтрок Цикл
					
		Если Строка.Префикс = 2 Тогда
			Количество1 = Строка.Количество;
			Сумма1 = Строка.Сумма;
		ИначеЕсли Строка.Префикс = 3 Тогда
			Количество2 = Строка.Количество;
			Сумма2 = Строка.Сумма;
		КонецЕсли;			 
	КонецЦикла;
	
	Если (Количество1 = Неопределено И Количество2 = Неопределено) ИЛИ (Сумма1 = Неопределено И Сумма2 = Неопределено) Тогда
		Есть = Ложь;
	КонецЕсли;
	
	Возврат Есть;
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеТаблицаДокументов()
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Использование = Истина;
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Желтый);
	
	ЭлементУсловияГруппа = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ЭлементУсловияГруппа.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ЭлементУсловия1 				= ЭлементУсловияГруппа.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементУсловия1.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("ТаблицаДокументов.КурсВзаиморасчетовБП");
	ЭлементУсловия1.ПравоеЗначение  = Новый ПолеКомпоновкиДанных("ТаблицаДокументов.КурсВзаиморасчетовУТ");
	ЭлементУсловия1.ВидСравнения 	= ВидСравненияКомпоновкиДанных.НеРавно;
	
	ЭлементУсловия2 				= ЭлементУсловияГруппа.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементУсловия2.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("ТаблицаДокументов.СуммаДокументаРеглБП");
	ЭлементУсловия2.ПравоеЗначение  = Новый ПолеКомпоновкиДанных("ТаблицаДокументов.СуммаДокументаРеглУТ");
	ЭлементУсловия2.ВидСравнения 	= ВидСравненияКомпоновкиДанных.НеРавно;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацииПриИзменении(Элемент)
	Объект.Организации = Организации; 
КонецПроцедуры

&НаКлиенте
Процедура НеКонтрагентыПриИзменении(Элемент)
	Объект.НеКонтрагенты = НеКонтрагенты;
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	//УстановитьУсловноеОформлениеТаблицаДокументов();
	//<%%%> --- Виктор vik070777@yandex.ru 17.05.2022 12:36:07 
	РеквизитФормыВЗначение("Объект").ВыполнитьЧтениеСохраненныхДанных(ЭтаФорма);
	//<%%%> --- Виктор 17.05.2022 12:36:07 END
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
	
	СерверныйВариантПриИзменении(Неопределено);
	Если Период.ДатаНачала = Дата(1,1,1) Тогда
		Период.ДатаНачала = НачалоМесяца(ТекущаяДата());
	КонецЕсли;
	
	Если Период.ДатаОкончания = Дата(1,1,1) Тогда
		Период.ДатаОкончания = КонецМесяца(ТекущаяДата());
	КонецЕсли;
	
	ЗаполнитьТДНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТДНаСервере()
	
	ТабличныйДокумент.Очистить();
	Объект_ = РеквизитФормыВЗначение("Объект");
	Макет = Объект_.ПолучитьМакет("Макет");
	Макет.Параметры.Расшифровка = Истина; // чтобы работала расшифровка
	ОбластьПодсказка = Макет.ПолучитьОбласть("Подсказка");
	ТабличныйДокумент.Вывести(ОбластьПодсказка);
	
КонецПроцедуры	

&НаСервере
Процедура ОбновитьТаблицуДокументовФормы(ТаблицаИсточник)
	Для каждого СтрокаТаблицыИсточник Из ТаблицаИсточник Цикл
		СтрокаТаблицыИсточник.Номер = РеквизитФормыВЗначение("Объект").УдалитьПробелыВСтроке(СтрокаТаблицыИсточник.Номер);
		ЗаполнитьЗначенияСвойств(ТаблицаДокументов.Добавить(), СтрокаТаблицыИсточник);	
	КонецЦикла;
	СвернутьТаблицуДокументов("ТаблицаДокументов");
	Для каждого Строка из ТаблицаДокументов Цикл
		Если Строка.СуммаДокументаУТ <> Строка.СуммаДокументаБП 
			ИЛИ Строка.СуммаДокументаРеглУТ <> Строка.СуммаДокументаРеглБП 
			ИЛИ Строка.КурсВзаиморасчетовУТ <> Строка.КурсВзаиморасчетовБП Тогда
			Строка.ДокументЕстьРазница = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СвернутьТаблицуДокументов(ИмяТаблицы)
	ТЗ = РеквизитФормыВЗначение(ИмяТаблицы, Тип("ТаблицаЗначений"));
	//ТЗ = ТЧ.Выгрузить();
	ТЗ.Свернуть("Номер, Дата, НаименованиеДокУТ, НаименованиеДокБП", "СуммаДокументаУТ, СуммаДокументаБП, СуммаДокументаРеглБП, СуммаДокументаРеглУТ, КурсВзаиморасчетовБП, КурсВзаиморасчетовУТ");
	//Сверить курсы и суммы, если есть расхождения подсветить и вывести сообщение
	//
	ТаблицаДокументов.Загрузить(ТЗ);
	//ТЧ.Загрузить(ТЗ);
КонецПроцедуры


#Область ДоработкаПараметров

&НаСервере
Функция ПолучитьПараметрыОбработки()
	
	СамОбъект = РеквизитФормыВЗначение("Объект");
	ПараметрыОбработки = СамОбъект.ПараметрыОбработки();
	НачальныеПараметры = ПолучитьНачальныеПараметрыФормы();
	НастройкиОбработки = СамОбъект.ПолучитьНастройкиОбработки(НачальныеПараметры);
	
	Возврат НастройкиОбработки;
КонецФункции

&НаСервере
Процедура ПередЗакрытиемНаСервере()
	
	СамОбъект = РеквизитФормыВЗначение("Объект");
	ПараметрыОбработки = СамОбъект.ПараметрыОбработки();
	НачальныеПараметры = ПолучитьНачальныеПараметрыФормы();
	НастройкиОбработки = СамОбъект.ПолучитьНастройкиОбработки(НачальныеПараметры);
	СамОбъект.СохранитьПараметрыОбработки(ПараметрыОбработки, НастройкиОбработки);

КонецПроцедуры



&НаСервере
Функция ПолучитьНачальныеПараметрыФормы()
	
	Результат = Новый Структура();
	Результат.Вставить("Адрес_ВозвратТоваровОтКлиента",Адрес_ВозвратТоваровОтКлиента);
	Результат.Вставить("Адрес_КорректировкаРеализации",Адрес_КорректировкаРеализации);
	Результат.Вставить("Адрес_ОтчетОРозничныхПродажах",Адрес_ОтчетОРозничныхПродажах);
	Результат.Вставить("Адрес_ПоступлениеТоваровУслуг",Адрес_ПоступлениеТоваровУслуг);
	Результат.Вставить("Адрес_РеализацияТоваровУслуг",Адрес_РеализацияТоваровУслуг);
	Результат.Вставить("ВозвратТоваровОтПокупателя",ВозвратТоваровОтПокупателя);
	Результат.Вставить("ВыбиратьПоКПП",ВыбиратьПоКПП);
	Результат.Вставить("Корректировка",Корректировка);
	Результат.Вставить("ОтчетОРозничныхПродажах",ОтчетОРозничныхПродажах);
	Результат.Вставить("НеКонтрагенты",НеКонтрагенты);
	Результат.Вставить("Организации",Организации);
	Результат.Вставить("Период",Период);
	Результат.Вставить("ПоискПО",ПоискПО);
	Результат.Вставить("ПоступлениеТоваровУслуг",ПоступлениеТоваровУслуг);
	Результат.Вставить("РеализацияТоваровУслуг",РеализацияТоваровУслуг);
	Результат.Вставить("ТаблицаДокументов",ТаблицаДокументов.Выгрузить());
	Результат.Вставить("ТЗ_внеш",ТЗ_внеш.Выгрузить());
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	ПередЗакрытиемНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройки(Команда)
	ПередЗакрытиемНаСервере();
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Сохранение настроек выполнено!");
КонецПроцедуры

&НаКлиенте
Процедура ПоискИОтправкаПоПочет(Команда)
	СохранитьНастройки(Команда);
	ВыполнитьФоновоеЗаданиеВРучную();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьФоновоеЗаданиеВРучную()
	 РеквизитФормыВЗначение("Объект").ВыполнитьКоманду("ФоновоеСравнениеДокументовБП_УТ",Неопределено);
КонецПроцедуры



#КонецОбласти